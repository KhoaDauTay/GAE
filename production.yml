version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: erp_greenwich_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: erp_greenwich_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: erp_greenwich_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme:z
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:5555:5555"

  redis:
    image: redis:6

  celeryworker:
    <<: *django
    image: erp_greenwich_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: erp_greenwich_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: erp_greenwich_production_flower
    command: /start-flower

  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups:z

  kong:
    container_name: kong
    image: kong:latest
    restart: always
    environment:
      KONG_DATABASE: "off"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_LOG_LEVEL: warn
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/production-kong.yml
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl, 0.0.0.0:9080 http2, 0.0.0.0:9081 http2 ssl
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 120s
      timeout: 10s
      retries: 3
    volumes:
      - ./compose/kong/logs:/usr/local/kong/logs
      - ./compose/kong/logs/log.log:/usr/local/kong/logs/log.log
      - ./compose/kong/declarative:/usr/local/kong/declarative
      - ./compose/kong/config/nginx.conf:/usr/local/kong/nginx.conf
      - ./compose/kong/config/nginx-kong.conf:/usr/local/kong/nginx-kong.conf
    ports:
      - "8001:8001"
      - "8444:8444"
      - "8000:8000"
      - "8443:8443"
    command: sudo chmod -R 777 /usr/local/kong

  portainer:
    image : portainer/portainer-ce:latest
    container_name: portainer_1
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
      - "9000:9000"
