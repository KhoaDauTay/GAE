version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: erp_greenwich_local_django
    container_name: django
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8080:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: erp_greenwich_production_postgres
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres

#  docs:
#    image: erp_greenwich_local_docs
#    container_name: docs
#    build:
#      context: .
#      dockerfile: ./compose/local/docs/Dockerfile
#    env_file:
#      - ./.envs/.local/.django
#    volumes:
#      - ./docs:/docs:z
#      - ./config:/app/config:z
#      - ./erp_greenwich:/app/erp_greenwich:z
#    ports:
#      - "7000:7000"
#    command: /start-docs

  redis:
    image: redis:6
    container_name: redis

  celeryworker:
    <<: *django
    image: erp_greenwich_local_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: erp_greenwich_local_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: erp_greenwich_local_flower
    container_name: flower
    ports:
      - "5555:5555"
    command: /start-flower

#  kong-database:
#    image: postgres:9.6
#    container_name: kong-database
#    ports:
#      - "5433:5432"
#    environment:
#      - POSTGRES_USER=kong
#      - POSTGRES_DB=kong
#      - POSTGRES_PASSWORD=kong
#    networks:
#      - kong-net
#    volumes:
#      - "db-data-kong-postgres:/var/lib/postgresql/data"
#
#  kong-migrations:
#    image: kong
#    environment:
#      - KONG_DATABASE=postgres
#      - KONG_PG_HOST=kong-database
#      - KONG_PG_PASSWORD=kong
#      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
#    command: kong migrations bootstrap
#    restart: on-failure
#    networks:
#      - kong-net
#    depends_on:
#      - kong-database
#
#  kong:
#    image: kong
#    container_name: kong
#    volumes:
#      - ./kong.yml:/usr/local/kong/declarative/kong.yml
#    environment:
#      - LC_CTYPE=en_US.UTF-8
#      - LC_ALL=en_US.UTF-8
#      - KONG_DATABASE=postgres
#      - KONG_PG_HOST=kong-database
#      - KONG_PG_USER=kong
#      - KONG_PG_PASSWORD=kong
#      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
#      - KONG_PROXY_ACCESS_LOG=/dev/stdout
#      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
#      - KONG_PROXY_ERROR_LOG=/dev/stderr
#      - KONG_ADMIN_ERROR_LOG=/dev/stderr
#      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
#    restart: on-failure
#    ports:
#      - "8000:8000"
#      - "8443:8443"
#      - "8001:8001"
#      - "8444:8444"
#    links:
#      - kong-database:kong-database
#    networks:
#      - kong-net
#    depends_on:
#      - kong-migrations
